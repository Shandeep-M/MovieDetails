@model MovieDetails.Models.MoviesDto

@{
    ViewBag.Title = "Create Movie";
}


<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.1/css/bootstrap.min.css"
      rel="stylesheet" type="text/css" />
<script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css"
      rel="stylesheet" type="text/css" />
<script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"
        type="text/javascript"></script>
<script>
    $(document).ready(function () {
        $('#show').click(function () {
            $('#ProducerForm').css('display', 'block');
        });
    });


    $(document).ready(function () {
        $('#close').click(function () {
            $('#ProducerForm').css('display', 'none');
        });
    });
    $(document).ready(function () {
        $('#showNewActor').click(function () {
            $('#ActorForm').css('display', 'block');
        });
    });
    $(document).ready(function () {
        $('#closeActorForm').click(function () {
            $('#ActorForm').css('display', 'none');
        });
    });
    


</script>


<h2>Create Movie</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleasedYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleasedYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleasedYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Producer, Model.ProducerList,"<--Select-->")      <a id="show" href="#">Add New</a>
               

                <div id="ProducerForm" style="display: none;">
                    @using (Html.BeginForm())
                    {                       
                        <div class="form-group">
                            @Html.Label("Producer Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PersonName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("DOB", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Bio", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <input type="submit" value="CreateProducer" name="command" /> <span style="display:inline-block; width: 20px;"></span> <a id="close" href="#">Close</a>

                    }
                </div>
                @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (var i = 0; i < Model.ActorList.Count; i++)
                {
                    <table>
                        <tr>
                            <td>
                                @Html.HiddenFor(it => it.ActorList[i].Name)
                                @Html.CheckBoxFor(it => it.ActorList[i].isChecked, new { Style = "vertical-align:4px}" })

                            </td>
                            <td>
                                @Html.DisplayFor(it => it.ActorList[i].Name)
                            </td>
                        </tr>
                    </table>

                }
                <a id="showNewActor" href="#">Add New</a>


                <div id="ActorForm" style="display: none;">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            @Html.Label("Actor Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PersonName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("DOB", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Bio", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <input type="submit" value="CreateActor" name="command" /> <span style="display:inline-block; width: 20px;"></span> <a id="closeActorForm" href="#">Close</a>

                    }
                </div>
                @Html.ValidationMessageFor(model => model.Actors, "", new { @class = "text-danger" })
            </div>
        </div>




       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="CreateMovie" name="command" class="btn btn-default" />
            </div>
        </div>
       
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
